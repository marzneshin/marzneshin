{
  "name": "Name",
  "info": "Info",
  "status": "Status",
  "address": "Address",
  "users": "Users",
  "nodes": "Nodes",
  "services": "Services",
  "hosts": "Hosts",
  "username": "Username",
  "password": "Password",
  "inbounds": "Inbounds",
  "submit": "Submit",
  "login": "Login",
  "edit": "Edit",
  "actions": "Actions",
  "settings": "Settings",
  "logs": "Logs",
  "note": "Note",
  "config": "Config",
  "tag": "Tag",
  "protocol": "Protocol",
  "online": "Online",
  "offline": "Offline",
  "not_connected": "Not Connected",
  "apply": "Apply",
  "open": "Open",
  "delete": "Delete",
  "port": "Port",
  "create": "Create",
  "path": "Path",
  "host": "Host",
  "alpn": "ALPN",
  "security": "Security",
  "user_info": "User Info",
  "admin_info": "Admin Info",
  "subscription": "Subscription",
  "subscription_link": "Subscription Link",
  "fingerprint": "Fingerprint",
  "mux": "Mux",
  "fragment": "Fragment",
  "enable": "Enable",
  "enabled": "Enabled",
  "activated": "Activated",
  "unlimited": "Unlimited",
  "left": "Left",
  "reached": "Reached",
  "inactive": "Inactive",
  "active": "Active",
  "disable": "Disable",
  "close": "Close",
  "save": "Save",
  "days": "Days",
  "home": "Home",
  "cancel": "Cancel",
  "dark": "Dark",
  "light": "Light",
  "system": "System",
  "disabled": "Disabled",
  "advanced-options": "Advanced Options",
  "language": "Language",
  "theme": "Theme",
  "pattern": "Pattern",
  "result": "Result",
  "deselect": "Deselect",
  "view": "View",
  "certificate": "Certificate",
  "valid": "Valid",
  "finished": "Finished",
  "expired": "Expired",
  "change": "Change",
  "admins": "Admins",
  "normal": "Normal",
  "sudo": "Sudo",
  "owner": "Owner",
  "running": "Running",
  "down": "Down",
  "weight": "Weight",
  "support-us": {
    "title": "Support Us",
    "desc": "Marzneshin is free and open-source software (FOSS), join us and show your support by donating.",
    "donate": "Donate"
  },
  "page": {
    "home": {
      "users-stats": {
        "desc": "Overview of user's statuses"
      },
      "total-traffics": {
        "title": "Total System Traffic",
        "desc": "Traffics combined from all nodes"
      }
    },
    "settings": {
      "subscription-settings": {
        "template-on-acceptance": "Template on Acceptance",
        "placeholder-remark": "Placeholder Remark",
        "placeholder-if-disabled": "Placeholder if Disabled",
        "shuffle-configs": "Shuffle Configs",
        "url-prefix": "URL Prefix",
        "profile-title": "Profile Title",
        "support-link": "Support Link",
        "update-interval": "Update Interval",
        "add-rule": "Add Rule",
        "reset-local-changes": "Reset Changes",
        "title": "Subscription",
        "description": "Manage and customize subscription settings with configurable rules and update options.",
        "subscription-title": "Subscription Rules",
        "subscription-desc": "Add your subscription rules in order of priority.",
        "alert": {
          "title": "No rules",
          "desc": "No rules have been defined for subscription"
        }
      },
      "certificate": {
        "copy": "Copy Certificate",
        "error": "Certificate Unavailable",
        "copied": "Certificate Copied"
      }
    },
    "login": {
      "username": {
        "error": {
          "isRequired": "Username is required"
        }
      },
      "password": {
        "error": {
          "is-required": "Password is required"
        }
      }
    },
    "nodes": {
      "nodes-usage-widget": {
        "title": "Node Traffic Usage",
        "desc": "Total traffic usage on this node"
      },
      "settings": {
        "no-backend-alert": {
          "title": "No backend is configured for this node",
          "desc": "Please take required measures and configure a backend for this node."
        },
        "title": "Nodes Settings",
        "detail": "Details",
        "log-container": {
          "title": "Xray logs"
        }
      },
      "dialogs": {
        "creation": {
          "title": "Add Node"
        },
        "deletion": {
          "title": "Remove Node"
        },
        "edition": {
          "title": "Edit Node"
        }
      },
      "usage_coefficient": "Usage Coefficient",
      "connection_backend": "Connection Backend",
      "connection_backend_desc": "Used for the remote connection",
      "certificate-alert": {
        "title": "Nodes Certificate Configuration",
        "desc": "If you aim to configure your nodes certificate, checkout settings page.",
        "click": "Click Here"
      }
    },
    "services": {
      "settings": {
        "title": "Service Settings",
        "detail": "Details"
      },
      "dialogs": {
        "creation": {
          "title": "Create Service"
        },
        "deletion": {
          "title": "Remove Service"
        },
        "edition": {
          "title": "Edit Service"
        }
      }
    },
    "users": {
      "created_at": "Created At",
      "no_use": "No Use",
      "data_limit_reached": "Data Limit Reached",
      "sub_updated_at": "Last subscription update",
      "sub_last_user_agent": "Last User Agent",
      "traffic_reset_at": "Last traffic reset",
      "lifetime_used_traffic": "Lifetime Used Traffic",
      "note-placeholder": "Additional information about user",
      "data_limit": "Data Limit",
      "traffic": "Traffic",
      "used_traffic": "Used Traffic",
      "data_limit_reset_strategy": "Data Reset Period",
      "online_at": "Last Use",
      "expire_date": "Expire Date",
      "unlimited": "Unlimited",
      "never": "Never",
      "limited": "Limited",
      "data_limit_method": "Data Limit",
      "fixed_date": "Fixed Date",
      "expire_method": "Expiration",
      "on_first_use": "On first use",
      "reset_usage": "Reset Usage",
      "revoke_subscription": "Revoke Subscription",
      "usage_duration": "Usage Duration",
      "activation_deadline": "Activation Deadline",
      "nodes-usage": "Nodes Usage",
      "settings": {
        "nodes-usage": {
          "last-days": "Last {{count}} days",
          "last-months": "Last {{count}} months",
          "last-hours": "Last {{count}} hours",
          "title": "User Nodes Usage",
          "desc": "The amount of user usage on each node in time."
        },
        "subscription_link": {
          "copied": "Subscription Link Copied",
          "copy": "Subscription Link",
          "error": "Unable to copy Subscription Link"
        }
      },
      "services-alert": {
        "title": "No Service found",
        "desc": "Make sure you create services to enable your users with inbounds to connect with.",
        "click": "Click Here"
      },
      "dialogs": {
        "edition": {
          "title": "Edit User"
        },
        "creation": {
          "title": "Create User"
        },
        "deletion": {
          "title": "Remove User"
        },
        "mutation": {
          "note": {
            "desc": "Leave a note about your user"
          }
        }
      }
    },
    "admins": {
      "disable_users": "Disable users",
      "enable_users": "Enable users",
      "permission": "Permission",
      "dialogs": {
        "creation": {
          "title": "Create admin"
        },
        "edition": {
          "title": "Edit admin"
        },
        "deletion": {
          "title": "Delete admin"
        }
      },
      "modify-users-access": "Modify users access",
      "subscription-url-prefix": "Subscription URL prefix",
      "sudo-privilage": "Sudo privilage",
      "all-services-access": "All services access",
      "users-data-usage": "Users Data Usage"
    },
    "hosts": {
      "xmux-settings": "Xmux Settings",
      "split-http-settings": "Split HTTP Settings",
      "no-grpc-header": "No GRPC Header",
      "early-data": "Early Data",
      "http_headers": "HTTP Headers",
      "no-http-headers": "No HTTP headers",
      "mux-settings": "Mux Settings",
      "dns-servers": "DNS Servers",
      "obfuscation-password": "Obfuscation Password",
      "server-public-key": "Server public key",
      "tls-config": "TLS Config",
      "network-settings": "Network Settings",
      "security-settings": "Security Settings",
      "allowed-ips": "Allowed Ips",
      "allowed-ips-placeholder": "127.0.0.1,...",
      "camouflage-settings": "Camouflage Settings",
      "fragment": {
        "interval": "Interval",
        "length": "Length",
        "packets": "Packets",
        "length-error": "Length can not exceed 32 char and must be number-number",
        "interval-error": "Interval can not exceed 32 char and must be number-number",
        "packets-error": "Packets can not exceed 32 char and must be number-number or be tlshello"
      },
      "noise": {
        "interval": "Interval",
        "length": "Length",
        "packets": "Packets",
        "length-error": "Length can not exceed 32 char and must be number-number",
        "interval-error": "Interval can not exceed 32 char and must be number-number",
        "packets-error": "Packets can not exceed 32 char and must be number-number or be tlshello"
      },
      "popover-guide": {
        "title": "Using this setting, you are able to assign specific address for each inbound.",
        "desc": "Use these variables to make it dynamic",
        "username": "Username of the user",
        "dataUsage": "Current usage of the user",
        "remainingData": "Remaining data of the user",
        "DataLimitResetStrategy": "Periodic reset of user usage volume",
        "dataLimit": "Data limit of the user",
        "remainingDays": "Remaining days of the user",
        "expireDate": "Expiry date of the user",
        "jalaliExpireDate": "Expiry date of the user in jalali calendar",
        "remainingTime": "Remaining time of the user",
        "statusEmoji": "User status as an emoji (‚úÖ,‚åõ,ü™´,‚ùå,üîå)",
        "proxyProtocol": "Proxy protocol (e.g. VMess)",
        "proxyMethod": "Proxy transport method (e.g. ws)",
        "currentServer": "Marzneshin server ip address",
        "security": "Security Layer",
        "host": "Request Host",
        "port": "Port",
        "path": "Path",
        "sni": "SNI",
        "advancedOptions": "Advanced options",
        "addHost": "Add host",
        "savedSuccess": "Host has been saved successfully",
        "loading": "loading...",
        "apply": "Apply",
        "port.info": "By default, the inbound port is advertised to the user. You can set a custom port in case this host forwards traffic from another port to your inbound. For example, the server may forward traffic from port 8443 to the default port of your inbound server.",
        "path.info": "Set a path for host users, useful behind a reverse proxy.",
        "sni.info": "By default, a host uses the SNI from the inbound. You can set a custom SNI in case this host is a server that has a different SNI. For example, the server may receive traffic with a different SSL certificate, perform SSL termination, and forward it to your inbound server.",
        "host.info": "By default, if a request host is set in the Xray config, this host is used. However, you can set a custom request host here if needed.",
        "security.info": "If the middleware server of this host uses a different security layer than the inbound's default, you can set a custom security layer here.",
        "alpn": "ALPN",
        "fingerprint": "Fingerprint",
        "host.multiHost": "To set multiple addresses, separate them with <badge>,</badge> Each time an address is chosen randomly.",
        "host.wildcard": "Use <badge>*</badge> to generate a random string (works for wildcard domain names)"
      },
      "mux": {
        "title": "Connection multiplexing",
        "desc": "Currently supported by v2rayng while using custom config"
      },
      "no-inbound-selection-alert": {
        "title": "No inbound is selected",
        "desc": "You must select an inbound in order to add a host."
      },
      "settings": {
        "title": "Host Settings"
      },
      "allowinsecure": "Allow Insecure",
      "dialogs": {
        "edition": {
          "title": "Edit Host"
        },
        "creation": {
          "title": "Add Host"
        },
        "deletion": {
          "title": "Remove Host"
        },
        "mutation": {
          "allowinsecure": {
            "alert": "Due to security concerns, it's not recommended to enable Allow Insecure"
          }
        }
      }
    }
  },
  "events": {
    "delete": {
      "error": "Failed to remove {{name}}",
      "success": {
        "title": "{{name}} has been successfully removed",
        "desc": ""
      }
    },
    "create": {
      "error": "Failed to create {{name}}",
      "success": {
        "title": "{{name}} is successfully created",
        "desc": ""
      }
    },
    "update": {
      "error": "Failed to update {{name}}",
      "success": {
        "title": "{{name}} is successfully updated",
        "desc": ""
      }
    },
    "user_revoke": {
      "error": "Failed to revoke {{name}} subscription",
      "success": {
        "title": "{{name}} is successfully created",
        "desc": ""
      }
    },
    "user_reset": {
      "error": "Failed to reset {{name}} data usage",
      "success": {
        "title": "{{name}} data usage has been successfully reset",
        "desc": ""
      }
    },
    "user_status": {
      "error": "Failed to toggle {{name}} enable status",
      "success": {
        "title": "{{name}} enable status has been successfully updated",
        "desc": ""
      }
    }
  },
  "delete-confirmation": {
    "title": "Are you sure of this?",
    "desc": "This action cannot be undone."
  },
  "table": {
    "no-result-found": "No results found.",
    "row-per-page": "Rows per page",
    "no-result": "No result",
    "selected": "Selected",
    "toggle-column": "Toggle columns",
    "filter-placeholder": "Filter {{name}}"
  },
  "statuses": {
    "active": "Active",
    "connected": "Connected",
    "healthy": "Healthy",
    "disabled": "Disabled",
    "expired": "Expired",
    "on_hold": "On Hold",
    "connecting": "Connecting",
    "unhealthy": "Unhealthy",
    "limited": "Limited",
    "error": "Error"
  }
}
